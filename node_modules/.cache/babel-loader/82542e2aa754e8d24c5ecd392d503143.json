{"ast":null,"code":"var _jsxFileName = \"/home/basti/Desktop/proyecto/2/Prueba_requisito/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const {\n    user\n  } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title: title,\n        desc: desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?author=${post.author}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.author]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: post.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Upload by: \", post.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: [\"Upload: \", new Date(post.createdAt).toLocaleDateString(\"en-GB\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Collaborator: \", post.collaborator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostState\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: post.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostContact\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Email: \", post.userEmail]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Phone: \", post.userPhone]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), post.pdf && /*#__PURE__*/_jsxDEV(\"embed\", {\n        src: PF + post.pdf,\n        type: \"application/pdf\",\n        className: \"singlePostpdf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"xs7JL4oKuIn8mxMMLFGIhzF2qFM=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/basti/Desktop/proyecto/2/Prueba_requisito/client/src/components/singlePost/SinglePost.jsx"],"names":["axios","useContext","useEffect","useState","useLocation","Link","Context","SinglePost","location","path","pathname","split","post","setPost","PF","user","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","window","replace","err","handleUpdate","put","photo","e","target","value","author","date","Date","createdAt","toLocaleDateString","collaborator","state","userEmail","userPhone","pdf"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,kBAAP;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,IAAI,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,EAAE,GAAG,+BAAX;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWd,UAAU,CAACK,OAAD,CAA3B;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAC,KAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,OAAO,GAAG,YAAY;AAC1B,YAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,YAAYf,IAAtB,CAAlB;AACAI,MAAAA,OAAO,CAACU,GAAG,CAACE,IAAL,CAAP;AACAR,MAAAA,QAAQ,CAACM,GAAG,CAACE,IAAJ,CAAST,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACI,GAAG,CAACE,IAAJ,CAASP,IAAV,CAAP;AACD,KALD;;AAMAI,IAAAA,OAAO;AACR,GARQ,EAQN,CAACb,IAAD,CARM,CAAT;;AAUA,QAAMiB,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAM1B,KAAK,CAAC2B,MAAN,CAAc,UAASf,IAAI,CAACgB,GAAI,EAAhC,EAAmC;AACvCH,QAAAA,IAAI,EAAE;AAAEI,UAAAA,QAAQ,EAAEd,IAAI,CAACc;AAAjB;AADiC,OAAnC,CAAN;AAGAC,MAAAA,MAAM,CAACtB,QAAP,CAAgBuB,OAAhB,CAAwB,GAAxB;AACD,KALD,CAKE,OAAOC,GAAP,EAAY,CAAE;AACjB,GAPD;;AASA,QAAMC,YAAY,GAAG,YAAY;AAC/B,QAAI;AACF,YAAMjC,KAAK,CAACkC,GAAN,CAAW,UAAStB,IAAI,CAACgB,GAAI,EAA7B,EAAgC;AACpCC,QAAAA,QAAQ,EAAEd,IAAI,CAACc,QADqB;AAEpCb,QAAAA,KAAK,EAAEA,KAF6B;AAGpCE,QAAAA,IAAI,EAAEA;AAH8B,OAAhC,CAAN;AAKAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAPD,CAOE,OAAOW,GAAP,EAAY,CAAE;AACjB,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,iBACGpB,IAAI,CAACuB,KAAL,iBACC;AAAK,QAAA,GAAG,EAAErB,EAAE,GAAGF,IAAI,CAACuB,KAApB;AAA2B,QAAA,GAAG,EAAC,EAA/B;AAAkC,QAAA,SAAS,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAFJ,EAIGf,UAAU,gBACT;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEJ,KAFT;AAGE,QAAA,SAAS,EAAC,sBAHZ;AAIE,QAAA,SAAS,MAJX;AAKE,QAAA,QAAQ,EAAGoB,CAAD,IAAOnB,QAAQ,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cADS,gBAST;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,mBACGtB,KADH,EAEGJ,IAAI,CAACiB,QAAL,MAAkBd,IAAlB,aAAkBA,IAAlB,uBAAkBA,IAAI,CAAEc,QAAxB,kBACC;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,4BADZ;AAEE,YAAA,OAAO,EAAE,MAAMR,aAAa,CAAC,IAAD;AAF9B;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AACE,YAAA,SAAS,EAAC,iCADZ;AAEE,YAAA,OAAO,EAAEK;AAFX;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,eA6BE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,6CAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,YAAWd,IAAI,CAAC2B,MAAO,EAAlC;AAAqC,YAAA,SAAS,EAAC,MAA/C;AAAA,mCACE;AAAA,8BAAK3B,IAAI,CAAC2B,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,oBAAkC3B,IAAI,CAAC4B;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF,eAsCE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oCAA+C5B,IAAI,CAACiB,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,gBAAhB;AAAA,iCACW,IAAIY,IAAJ,CAAS7B,IAAI,CAAC8B,SAAd,EAAyBC,kBAAzB,CAA4C,OAA5C,CADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCF,eA4CE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,uCACiB/B,IAAI,CAACgC,YADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5CF,eAiDE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,oBAAoChC,IAAI,CAACiC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjDF,EAoDGzB,UAAU,gBACT;AACE,QAAA,SAAS,EAAC,qBADZ;AAEE,QAAA,KAAK,EAAEF,IAFT;AAGE,QAAA,QAAQ,EAAGkB,CAAD,IAAOjB,OAAO,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAH1B;AAAA;AAAA;AAAA;AAAA,cADS,gBAOT;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA,kBAA+BpB;AAA/B;AAAA;AAAA;AAAA;AAAA,cA3DJ,EA6DGE,UAAU,iBACT;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAqC,QAAA,OAAO,EAAEa,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA9DJ,eAkEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,gCAA2CrB,IAAI,CAACkC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,gCAA2ClC,IAAI,CAACmC,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlEF,EAsEGnC,IAAI,CAACoC,GAAL,iBACC;AACE,QAAA,GAAG,EAAElC,EAAE,GAAGF,IAAI,CAACoC,GADjB;AAEE,QAAA,IAAI,EAAC,iBAFP;AAGE,QAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;;GA1HuBzC,U;UACLH,W;;;KADKG,U","sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title: title,\n        desc: desc,\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {post.photo && (\n          <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\n        )}\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"singlePostTitleInput\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Author:\n            <Link to={`/?author=${post.author}`} className=\"link\">\n              <b> {post.author}</b>\n            </Link>\n          </span>\n          <span className=\"singlePostDate\">{post.date}</span>\n        </div>\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">Upload by: {post.username}</span>\n          <span className=\"singlePostDate\">\n            Upload: {new Date(post.createdAt).toLocaleDateString(\"en-GB\")}\n          </span>\n        </div>\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Collaborator: {post.collaborator}\n          </span>\n        </div>\n        <div className=\"singlePostState\">\n          <span className=\"singlePostAuthor\">{post.state}</span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"singlePostDescInput\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDesc\">{desc}</p>\n        )}\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n        <div className=\"singlePostContact\">\n          <span className=\"singlePostAuthor\">Email: {post.userEmail}</span>\n          <span className=\"singlePostAuthor\">Phone: {post.userPhone}</span>\n        </div>\n        {post.pdf && (\n          <embed\n            src={PF + post.pdf}\n            type=\"application/pdf\"\n            className=\"singlePostpdf\"\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}